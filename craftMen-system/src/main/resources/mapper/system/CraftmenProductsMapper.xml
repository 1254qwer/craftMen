<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.craftmen.system.mapper.CraftmenProductsMapper">
    
    <resultMap type="CraftmenProducts" id="CraftmenProductsResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="description"    column="description"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="created_at"    />
        <result property="image"    column="image"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectCraftmenProductsVo">
        select id, name, type, description, status, created_at, image, remark from craftmen_products
    </sql>

    <select id="selectCraftmenProductsList" parameterType="CraftmenProducts" resultMap="CraftmenProductsResult">
        <include refid="selectCraftmenProductsVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCraftmenProductsById" parameterType="Long" resultMap="CraftmenProductsResult">
        <include refid="selectCraftmenProductsVo"/>
        where id = #{id}
    </select>

    <insert id="insertCraftmenProducts" parameterType="CraftmenProducts" useGeneratedKeys="true" keyProperty="id">
        insert into craftmen_products
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="type != null">type,</if>
            <if test="description != null">description,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="image != null">image,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="type != null">#{type},</if>
            <if test="description != null">#{description},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="image != null">#{image},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateCraftmenProducts" parameterType="CraftmenProducts">
        update craftmen_products
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="image != null">image = #{image},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCraftmenProductsById" parameterType="Long">
        delete from craftmen_products where id = #{id}
    </delete>

    <delete id="deleteCraftmenProductsByIds" parameterType="String">
        delete from craftmen_products where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>