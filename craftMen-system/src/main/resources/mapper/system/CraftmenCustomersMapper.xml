<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.craftmen.system.mapper.CraftmenCustomersMapper">
    
    <resultMap type="CraftmenCustomers" id="CraftmenCustomersResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="fullName"    column="full_name"    />
        <result property="address"    column="address"    />
        <result property="email"    column="email"    />
        <result property="managerName"    column="manager_name"    />
        <result property="phone"    column="phone"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectCraftmenCustomersVo">
        select id, name, full_name, address, email, manager_name, phone, status, created_at, updated_at, remark from craftmen_customers
    </sql>

    <select id="selectCraftmenCustomersList" parameterType="CraftmenCustomers" resultMap="CraftmenCustomersResult">
        <include refid="selectCraftmenCustomersVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCraftmenCustomersById" parameterType="Long" resultMap="CraftmenCustomersResult">
        <include refid="selectCraftmenCustomersVo"/>
        where id = #{id}
    </select>

    <insert id="insertCraftmenCustomers" parameterType="CraftmenCustomers" useGeneratedKeys="true" keyProperty="id">
        insert into craftmen_customers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="fullName != null and fullName != ''">full_name,</if>
            <if test="address != null">address,</if>
            <if test="email != null">email,</if>
            <if test="managerName != null">manager_name,</if>
            <if test="phone != null">phone,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="fullName != null and fullName != ''">#{fullName},</if>
            <if test="address != null">#{address},</if>
            <if test="email != null">#{email},</if>
            <if test="managerName != null">#{managerName},</if>
            <if test="phone != null">#{phone},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateCraftmenCustomers" parameterType="CraftmenCustomers">
        update craftmen_customers
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="fullName != null and fullName != ''">full_name = #{fullName},</if>
            <if test="address != null">address = #{address},</if>
            <if test="email != null">email = #{email},</if>
            <if test="managerName != null">manager_name = #{managerName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCraftmenCustomersById" parameterType="Long">
        delete from craftmen_customers where id = #{id}
    </delete>

    <delete id="deleteCraftmenCustomersByIds" parameterType="String">
        delete from craftmen_customers where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>